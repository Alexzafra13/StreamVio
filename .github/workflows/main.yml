name: StreamVio CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  server-tests:
    runs-on: ubuntu-latest

    services:
      sqlite:
        image: keinos/sqlite3

    strategy:
      matrix:
        node-version: [16.x, 18.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: server/package-lock.json

      - name: Install FFmpeg
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg

      - name: Install dependencies
        run: |
          cd server
          npm ci

      - name: Initialize database
        run: |
          cd server
          npm run init-db:test

      - name: Run unit tests
        run: |
          cd server
          npm test

      - name: Run integration tests
        run: |
          cd server
          npm run test:integration

      - name: Run API tests
        run: |
          cd server
          npm run test:api

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          directory: ./server/coverage/
          flags: server

  client-tests:
    runs-on: ubuntu-latest
    needs: server-tests

    strategy:
      matrix:
        node-version: [16.x, 18.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: clients/web/package-lock.json

      - name: Install dependencies
        run: |
          cd clients/web
          npm ci

      - name: Run component tests
        run: |
          cd clients/web
          npm test

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          directory: ./clients/web/coverage/
          flags: client

  e2e-tests:
    runs-on: ubuntu-latest
    needs: [server-tests, client-tests]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: "npm"

      - name: Install FFmpeg
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg

      - name: Install server dependencies
        run: |
          cd server
          npm ci

      - name: Install client dependencies
        run: |
          cd clients/web
          npm ci

      - name: Initialize test database
        run: |
          cd server
          npm run init-db:test-data

      - name: Install Playwright browsers
        run: |
          cd clients/web
          npx playwright install --with-deps

      - name: Run E2E tests
        run: |
          cd clients/web
          npm run test:e2e

      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: playwright-report
          path: clients/web/playwright-report/
          retention-days: 30

  performance-tests:
    runs-on: ubuntu-latest
    needs: [e2e-tests]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Install FFmpeg
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg

      - name: Install dependencies
        run: |
          cd server
          npm ci

      - name: Initialize database with test data
        run: |
          cd server
          npm run init-db:test-data

      - name: Run performance tests
        run: |
          cd server
          npm run test:performance

      - name: Upload performance results
        uses: actions/upload-artifact@v3
        with:
          name: performance-results
          path: server/performance-results/

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: [e2e-tests, performance-tests]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Build client
        run: |
          cd clients/web
          npm ci
          npm run build

      - name: Prepare server
        run: |
          cd server
          npm ci --production

      - name: Package application
        run: |
          mkdir -p dist
          cp -r server dist/
          cp -r clients/web/dist dist/client
          cp setup.sh dist/
          cd dist
          tar -czf streamvio.tar.gz server client setup.sh

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/streamvio.tar.gz
          asset_name: streamvio.tar.gz
          asset_content_type: application/gzip
